{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nexport const useAuthStore = create()(persist(set => ({\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  login: (user, token) => set({\n    user,\n    token,\n    isAuthenticated: true\n  }),\n  logout: () => set({\n    user: null,\n    token: null,\n    isAuthenticated: false\n  }),\n  updateUser: user => set(state => ({\n    ...state,\n    user\n  }))\n}), {\n  name: 'auth-storage'\n}));","map":{"version":3,"names":["create","persist","useAuthStore","set","user","token","isAuthenticated","login","logout","updateUser","state","name"],"sources":["C:/Users/agraw/Desktop/projects/odoo_hackathon/odoo/frontend/src/stores/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  isAdmin: boolean;\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  login: (user: User, token: string) => void;\r\n  logout: () => void;\r\n  updateUser: (user: User) => void;\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>()(\r\n  persist(\r\n    (set) => ({\r\n      user: null,\r\n      token: null,\r\n      isAuthenticated: false,\r\n      login: (user: User, token: string) =>\r\n        set({\r\n          user,\r\n          token,\r\n          isAuthenticated: true,\r\n        }),\r\n      logout: () =>\r\n        set({\r\n          user: null,\r\n          token: null,\r\n          isAuthenticated: false,\r\n        }),\r\n      updateUser: (user: User) =>\r\n        set((state) => ({\r\n          ...state,\r\n          user,\r\n        })),\r\n    }),\r\n    {\r\n      name: 'auth-storage',\r\n    }\r\n  )\r\n); "],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,OAAO,QAAQ,oBAAoB;AAkB5C,OAAO,MAAMC,YAAY,GAAGF,MAAM,CAAY,CAAC,CAC7CC,OAAO,CACJE,GAAG,KAAM;EACRC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE,KAAK;EACtBC,KAAK,EAAEA,CAACH,IAAU,EAAEC,KAAa,KAC/BF,GAAG,CAAC;IACFC,IAAI;IACJC,KAAK;IACLC,eAAe,EAAE;EACnB,CAAC,CAAC;EACJE,MAAM,EAAEA,CAAA,KACNL,GAAG,CAAC;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,eAAe,EAAE;EACnB,CAAC,CAAC;EACJG,UAAU,EAAGL,IAAU,IACrBD,GAAG,CAAEO,KAAK,KAAM;IACd,GAAGA,KAAK;IACRN;EACF,CAAC,CAAC;AACN,CAAC,CAAC,EACF;EACEO,IAAI,EAAE;AACR,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}