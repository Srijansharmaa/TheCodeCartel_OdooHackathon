{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { apiService } from '../services/api';\nexport const useAuthStore = create()(persist(set => ({\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  login: (user, token) => {\n    apiService.setToken(token);\n    set({\n      user,\n      token,\n      isAuthenticated: true\n    });\n  },\n  logout: () => {\n    apiService.clearToken();\n    set({\n      user: null,\n      token: null,\n      isAuthenticated: false\n    });\n  },\n  updateUser: user => set(state => ({\n    ...state,\n    user\n  }))\n}), {\n  name: 'auth-storage'\n}));","map":{"version":3,"names":["create","persist","apiService","useAuthStore","set","user","token","isAuthenticated","login","setToken","logout","clearToken","updateUser","state","name"],"sources":["C:/Users/agraw/Desktop/projects/odoo_hackathon/odoo/frontend/src/stores/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\nimport { apiService } from '../services/api';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  isAdmin: boolean;\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  login: (user: User, token: string) => void;\r\n  logout: () => void;\r\n  updateUser: (user: User) => void;\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>()(\r\n  persist(\r\n    (set) => ({\r\n      user: null,\r\n      token: null,\r\n      isAuthenticated: false,\r\n      login: (user: User, token: string) => {\r\n        apiService.setToken(token);\r\n        set({\r\n          user,\r\n          token,\r\n          isAuthenticated: true,\r\n        });\r\n      },\r\n      logout: () => {\r\n        apiService.clearToken();\r\n        set({\r\n          user: null,\r\n          token: null,\r\n          isAuthenticated: false,\r\n        });\r\n      },\r\n      updateUser: (user: User) =>\r\n        set((state) => ({\r\n          ...state,\r\n          user,\r\n        })),\r\n    }),\r\n    {\r\n      name: 'auth-storage',\r\n    }\r\n  )\r\n); "],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,UAAU,QAAQ,iBAAiB;AAkB5C,OAAO,MAAMC,YAAY,GAAGH,MAAM,CAAY,CAAC,CAC7CC,OAAO,CACJG,GAAG,KAAM;EACRC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE,KAAK;EACtBC,KAAK,EAAEA,CAACH,IAAU,EAAEC,KAAa,KAAK;IACpCJ,UAAU,CAACO,QAAQ,CAACH,KAAK,CAAC;IAC1BF,GAAG,CAAC;MACFC,IAAI;MACJC,KAAK;MACLC,eAAe,EAAE;IACnB,CAAC,CAAC;EACJ,CAAC;EACDG,MAAM,EAAEA,CAAA,KAAM;IACZR,UAAU,CAACS,UAAU,CAAC,CAAC;IACvBP,GAAG,CAAC;MACFC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,IAAI;MACXC,eAAe,EAAE;IACnB,CAAC,CAAC;EACJ,CAAC;EACDK,UAAU,EAAGP,IAAU,IACrBD,GAAG,CAAES,KAAK,KAAM;IACd,GAAGA,KAAK;IACRR;EACF,CAAC,CAAC;AACN,CAAC,CAAC,EACF;EACES,IAAI,EAAE;AACR,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}